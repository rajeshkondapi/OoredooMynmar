<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="165" hostname="wlpt761" name="AndroidAppiumAuto.AppActivity" tests="178" failures="0" timestamp="01 Sep 2020 05:51:18 GMT" time="326.612" errors="5">
  <testcase name="launchapp" time="1.560" classname="AndroidAppiumAuto.AppActivity">
    <error type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create a new remote session. Please check the server log for more details. Original error: &quot;OnePlus 7&quot; is not available in Free plan. Devices available in Free plan are Google Pixel 3-9.0,Samsung Galaxy S10e-9.0,iPhone 11 Pro-13.2,iPhone 11 Pro Max-13.2. To get uninterrupted access to all real iOS and Android devices, please upgrade to a paid plan. Refer to https://www.browserstack.com/pricing?product=app-automate (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.51 seconds
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;WLPT761&#039;, ip: &#039;172.16.40.110&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: AndroidDriver
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;WLPT761&#039;, ip: &#039;172.16.40.110&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: AndroidDriver">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create a new remote session. Please check the server log for more details. Original error: "OnePlus 7" is not available in Free plan. Devices available in Free plan are Google Pixel 3-9.0,Samsung Galaxy S10e-9.0,iPhone 11 Pro-13.2,iPhone 11 Pro Max-13.2. To get uninterrupted access to all real iOS and Android devices, please upgrade to a paid plan. Refer to https://www.browserstack.com/pricing?product=app-automate (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.51 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:208)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:95)
at AndroidAppiumAuto.AppActivity.launchapp(AppActivity.java:923)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
... 32 more
Caused by: org.openqa.selenium.WebDriverException: "OnePlus 7" is not available in Free plan. Devices available in Free plan are Google Pixel 3-9.0,Samsung Galaxy S10e-9.0,iPhone 11 Pro-13.2,iPhone 11 Pro Max-13.2. To get uninterrupted access to all real iOS and Android devices, please upgrade to a paid plan. Refer to https://www.browserstack.com/pricing?product=app-automate (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.51 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
... 37 more
]]>
    </error>
  </testcase> <!-- launchapp -->
  <testcase name="launchapp" time="1.363" classname="AndroidAppiumAuto.AppActivity">
    <error type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create a new remote session. Please check the server log for more details. Original error: [BROWSERSTACK_INVALID_DEVICE] Incorrect device name &#039;Google Nexus 7&#039; specified for the &#039;device&#039; capability. To view the list of available devices and configure the value for &#039;device&#039; capability, visit our capability builder - https://www.browserstack.com/app-automate/capabilities (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.28 seconds
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;WLPT761&#039;, ip: &#039;172.16.40.110&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: AndroidDriver
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;WLPT761&#039;, ip: &#039;172.16.40.110&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: AndroidDriver">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create a new remote session. Please check the server log for more details. Original error: [BROWSERSTACK_INVALID_DEVICE] Incorrect device name 'Google Nexus 7' specified for the 'device' capability. To view the list of available devices and configure the value for 'device' capability, visit our capability builder - https://www.browserstack.com/app-automate/capabilities (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.28 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:208)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:95)
at AndroidAppiumAuto.AppActivity.launchapp(AppActivity.java:923)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
... 32 more
Caused by: org.openqa.selenium.WebDriverException: [BROWSERSTACK_INVALID_DEVICE] Incorrect device name 'Google Nexus 7' specified for the 'device' capability. To view the list of available devices and configure the value for 'device' capability, visit our capability builder - https://www.browserstack.com/app-automate/capabilities (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.28 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
... 37 more
]]>
    </error>
  </testcase> <!-- launchapp -->
  <testcase name="launchapp" time="4.156" classname="AndroidAppiumAuto.AppActivity">
    <error type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create a new remote session. Please check the server log for more details. Original error: &quot;Xiaomi Redmi Note 7&quot; is not available in Free plan. Devices available in Free plan are Google Pixel 3-9.0,Samsung Galaxy S10e-9.0,iPhone 11 Pro-13.2,iPhone 11 Pro Max-13.2. To get uninterrupted access to all real iOS and Android devices, please upgrade to a paid plan. Refer to https://www.browserstack.com/pricing?product=app-automate (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.77 seconds
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;WLPT761&#039;, ip: &#039;172.16.40.110&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: AndroidDriver
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;WLPT761&#039;, ip: &#039;172.16.40.110&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: AndroidDriver">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create a new remote session. Please check the server log for more details. Original error: "Xiaomi Redmi Note 7" is not available in Free plan. Devices available in Free plan are Google Pixel 3-9.0,Samsung Galaxy S10e-9.0,iPhone 11 Pro-13.2,iPhone 11 Pro Max-13.2. To get uninterrupted access to all real iOS and Android devices, please upgrade to a paid plan. Refer to https://www.browserstack.com/pricing?product=app-automate (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.77 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:208)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:95)
at AndroidAppiumAuto.AppActivity.launchapp(AppActivity.java:923)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
... 32 more
Caused by: org.openqa.selenium.WebDriverException: "Xiaomi Redmi Note 7" is not available in Free plan. Devices available in Free plan are Google Pixel 3-9.0,Samsung Galaxy S10e-9.0,iPhone 11 Pro-13.2,iPhone 11 Pro Max-13.2. To get uninterrupted access to all real iOS and Android devices, please upgrade to a paid plan. Refer to https://www.browserstack.com/pricing?product=app-automate (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.77 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WLPT761', ip: '172.16.40.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: AndroidDriver
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
... 37 more
]]>
    </error>
  </testcase> <!-- launchapp -->
  <testcase name="LoginPage" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LoginPage -->
  <testcase name="LoginPage" time="13.222" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="LoginPage" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LoginPage -->
  <testcase name="LoginPage" time="6.671" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="LoginPage" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LoginPage -->
  <testcase name="GetOtp" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GetOtp -->
  <testcase name="GetOtp" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GetOtp -->
  <testcase name="GetOtp" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GetOtp -->
  <testcase name="GetOtp" time="19.663" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="GetOtp" time="13.847" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="contextpopup" time="87.295" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="contextpopup" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contextpopup -->
  <testcase name="contextpopup" time="75.045" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="contextpopup" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contextpopup -->
  <testcase name="contextpopup" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contextpopup -->
  <testcase name="VIPHomePage" time="41.782" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="VIPHomePage" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePage -->
  <testcase name="VIPHomePage" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePage -->
  <testcase name="VIPHomePage" time="31.442" classname="AndroidAppiumAuto.AppActivity"/>
  <testcase name="VIPHomePage" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePage -->
  <testcase name="TopUpVoucher" time="13.741" classname="AndroidAppiumAuto.AppActivity">
    <error type="AndroidAppiumAuto.exceptions.CustomException" message="The Element Voucher could not find from the application please try again !">
      <![CDATA[AndroidAppiumAuto.exceptions.CustomException: The Element Voucher could not find from the application please try again !
at AndroidAppiumAuto.CommonMethods.AppValidation(CommonMethods.java:192)
at AndroidAppiumAuto.AppActivity.TopUpVoucher(AppActivity.java:496)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- TopUpVoucher -->
  <testcase name="TopUpVoucher" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpVoucher -->
  <testcase name="TopUpVoucher" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpVoucher -->
  <testcase name="TopUpVoucher" time="0.000" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpVoucher -->
  <testcase name="TopUpVoucher" time="16.825" classname="AndroidAppiumAuto.AppActivity">
    <error type="AndroidAppiumAuto.exceptions.CustomException" message="The Element Voucher could not find from the application please try again !">
      <![CDATA[AndroidAppiumAuto.exceptions.CustomException: The Element Voucher could not find from the application please try again !
at AndroidAppiumAuto.CommonMethods.AppValidation(CommonMethods.java:192)
at AndroidAppiumAuto.AppActivity.TopUpVoucher(AppActivity.java:496)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- TopUpVoucher -->
  <testcase name="VIP_Validation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIP_Validation -->
  <testcase name="VIP_Validation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIP_Validation -->
  <testcase name="VIP_Validation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIP_Validation -->
  <testcase name="VIP_Validation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIP_Validation -->
  <testcase name="VIP_Validation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIP_Validation -->
  <testcase name="CloseTour" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CloseTour -->
  <testcase name="CloseTour" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CloseTour -->
  <testcase name="CloseTour" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CloseTour -->
  <testcase name="CloseTour" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CloseTour -->
  <testcase name="CloseTour" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CloseTour -->
  <testcase name="BannerDet" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BannerDet -->
  <testcase name="BannerDet" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BannerDet -->
  <testcase name="BannerDet" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BannerDet -->
  <testcase name="BannerDet" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BannerDet -->
  <testcase name="BannerDet" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BannerDet -->
  <testcase name="accountview" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- accountview -->
  <testcase name="accountview" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- accountview -->
  <testcase name="accountview" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- accountview -->
  <testcase name="accountview" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- accountview -->
  <testcase name="accountview" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- accountview -->
  <testcase name="Report_An_Issue" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Report_An_Issue -->
  <testcase name="Report_An_Issue" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Report_An_Issue -->
  <testcase name="Report_An_Issue" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Report_An_Issue -->
  <testcase name="Report_An_Issue" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Report_An_Issue -->
  <testcase name="Report_An_Issue" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Report_An_Issue -->
  <testcase name="SpecialVoiceData" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- SpecialVoiceData -->
  <testcase name="SpecialVoiceData" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- SpecialVoiceData -->
  <testcase name="SpecialVoiceData" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- SpecialVoiceData -->
  <testcase name="SpecialVoiceData" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- SpecialVoiceData -->
  <testcase name="SpecialVoiceData" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- SpecialVoiceData -->
  <testcase name="More_Settings" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- More_Settings -->
  <testcase name="More_Settings" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- More_Settings -->
  <testcase name="More_Settings" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- More_Settings -->
  <testcase name="More_Settings" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- More_Settings -->
  <testcase name="More_Settings" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- More_Settings -->
  <testcase name="ServiceBanner" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ServiceBanner -->
  <testcase name="ServiceBanner" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ServiceBanner -->
  <testcase name="ServiceBanner" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ServiceBanner -->
  <testcase name="ServiceBanner" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ServiceBanner -->
  <testcase name="ServiceBanner" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ServiceBanner -->
  <testcase name="VIPMyDiscounts" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyDiscounts -->
  <testcase name="VIPMyDiscounts" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyDiscounts -->
  <testcase name="VIPMyDiscounts" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyDiscounts -->
  <testcase name="VIPMyDiscounts" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyDiscounts -->
  <testcase name="VIPMyDiscounts" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyDiscounts -->
  <testcase name="VIPRedeemPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPRedeemPoints -->
  <testcase name="VIPRedeemPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPRedeemPoints -->
  <testcase name="VIPRedeemPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPRedeemPoints -->
  <testcase name="VIPRedeemPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPRedeemPoints -->
  <testcase name="VIPRedeemPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPRedeemPoints -->
  <testcase name="OnlyForYou" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- OnlyForYou -->
  <testcase name="OnlyForYou" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- OnlyForYou -->
  <testcase name="OnlyForYou" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- OnlyForYou -->
  <testcase name="OnlyForYou" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- OnlyForYou -->
  <testcase name="OnlyForYou" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- OnlyForYou -->
  <testcase name="BuyPackBuy" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BuyPackBuy -->
  <testcase name="BuyPackBuy" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BuyPackBuy -->
  <testcase name="BuyPackBuy" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BuyPackBuy -->
  <testcase name="BuyPackBuy" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BuyPackBuy -->
  <testcase name="BuyPackBuy" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- BuyPackBuy -->
  <testcase name="GiftPackGift" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GiftPackGift -->
  <testcase name="GiftPackGift" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GiftPackGift -->
  <testcase name="GiftPackGift" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GiftPackGift -->
  <testcase name="GiftPackGift" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GiftPackGift -->
  <testcase name="GiftPackGift" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- GiftPackGift -->
  <testcase name="PyawPyawYu" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- PyawPyawYu -->
  <testcase name="PyawPyawYu" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- PyawPyawYu -->
  <testcase name="PyawPyawYu" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- PyawPyawYu -->
  <testcase name="PyawPyawYu" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- PyawPyawYu -->
  <testcase name="PyawPyawYu" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- PyawPyawYu -->
  <testcase name="LiveTVDetails" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LiveTVDetails -->
  <testcase name="LiveTVDetails" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LiveTVDetails -->
  <testcase name="LiveTVDetails" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LiveTVDetails -->
  <testcase name="LiveTVDetails" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LiveTVDetails -->
  <testcase name="LiveTVDetails" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- LiveTVDetails -->
  <testcase name="VIPMyBenefits" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyBenefits -->
  <testcase name="VIPMyBenefits" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyBenefits -->
  <testcase name="VIPMyBenefits" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyBenefits -->
  <testcase name="VIPMyBenefits" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyBenefits -->
  <testcase name="VIPMyBenefits" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyBenefits -->
  <testcase name="Ooredoo_Play" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Ooredoo_Play -->
  <testcase name="Ooredoo_Play" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Ooredoo_Play -->
  <testcase name="Ooredoo_Play" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Ooredoo_Play -->
  <testcase name="Ooredoo_Play" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Ooredoo_Play -->
  <testcase name="Ooredoo_Play" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- Ooredoo_Play -->
  <testcase name="chat" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- chat -->
  <testcase name="chat" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- chat -->
  <testcase name="chat" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- chat -->
  <testcase name="chat" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- chat -->
  <testcase name="chat" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- chat -->
  <testcase name="QueryBalanceApi" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- QueryBalanceApi -->
  <testcase name="QueryBalanceApi" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- QueryBalanceApi -->
  <testcase name="QueryBalanceApi" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- QueryBalanceApi -->
  <testcase name="QueryBalanceApi" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- QueryBalanceApi -->
  <testcase name="QueryBalanceApi" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- QueryBalanceApi -->
  <testcase name="ByopQueryBalance" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ByopQueryBalance -->
  <testcase name="ByopQueryBalance" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ByopQueryBalance -->
  <testcase name="ByopQueryBalance" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ByopQueryBalance -->
  <testcase name="ByopQueryBalance" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ByopQueryBalance -->
  <testcase name="ByopQueryBalance" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- ByopQueryBalance -->
  <testcase name="VIPMyPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyPoints -->
  <testcase name="TopUpMPitesan" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpMPitesan -->
  <testcase name="VIPMyPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyPoints -->
  <testcase name="TopUpMPitesan" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpMPitesan -->
  <testcase name="VIPMyPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyPoints -->
  <testcase name="TopUpMPitesan" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpMPitesan -->
  <testcase name="VIPMyPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyPoints -->
  <testcase name="VIPMyPoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPMyPoints -->
  <testcase name="TopUpMPitesan" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpMPitesan -->
  <testcase name="TopUpMPitesan" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- TopUpMPitesan -->
  <testcase name="UpdateLocation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- UpdateLocation -->
  <testcase name="UpdateLocation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- UpdateLocation -->
  <testcase name="UpdateLocation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- UpdateLocation -->
  <testcase name="UpdateLocation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- UpdateLocation -->
  <testcase name="UpdateLocation" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- UpdateLocation -->
  <testcase name="KyoThone" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- KyoThone -->
  <testcase name="KyoThone" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- KyoThone -->
  <testcase name="KyoThone" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- KyoThone -->
  <testcase name="KyoThone" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- KyoThone -->
  <testcase name="KyoThone" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- KyoThone -->
  <testcase name="VipSpinWheel" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VipSpinWheel -->
  <testcase name="VipSpinWheel" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VipSpinWheel -->
  <testcase name="VipSpinWheel" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VipSpinWheel -->
  <testcase name="VipSpinWheel" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VipSpinWheel -->
  <testcase name="VipSpinWheel" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VipSpinWheel -->
  <testcase name="contentPop" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contentPop -->
  <testcase name="contentPop" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contentPop -->
  <testcase name="contentPop" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contentPop -->
  <testcase name="contentPop" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contentPop -->
  <testcase name="contentPop" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- contentPop -->
  <testcase name="VIPEarnMorePoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPEarnMorePoints -->
  <testcase name="VIPEarnMorePoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPEarnMorePoints -->
  <testcase name="VIPEarnMorePoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPEarnMorePoints -->
  <testcase name="VIPEarnMorePoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPEarnMorePoints -->
  <testcase name="VIPEarnMorePoints" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPEarnMorePoints -->
  <testcase name="CssProperties" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CssProperties -->
  <testcase name="CssProperties" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CssProperties -->
  <testcase name="CssProperties" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CssProperties -->
  <testcase name="CssProperties" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CssProperties -->
  <testcase name="CssProperties" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- CssProperties -->
  <testcase name="DDDPacks" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- DDDPacks -->
  <testcase name="DDDPacks" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- DDDPacks -->
  <testcase name="DDDPacks" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- DDDPacks -->
  <testcase name="DDDPacks" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- DDDPacks -->
  <testcase name="DDDPacks" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- DDDPacks -->
  <testcase name="VIPHomePageShortCutIcons" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePageShortCutIcons -->
  <testcase name="VIPHomePageShortCutIcons" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePageShortCutIcons -->
  <testcase name="VIPHomePageShortCutIcons" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePageShortCutIcons -->
  <testcase name="VIPHomePageShortCutIcons" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePageShortCutIcons -->
  <testcase name="VIPHomePageShortCutIcons" classname="AndroidAppiumAuto.AppActivity">
    <skipped/>
  </testcase> <!-- VIPHomePageShortCutIcons -->
</testsuite> <!-- AndroidAppiumAuto.AppActivity -->
